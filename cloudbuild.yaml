steps:
  # 1. Build Docker image with caching
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/my-python-project-451608/python-app-repo/python-app:$COMMIT_SHA'
      - '--cache-from=us-central1-docker.pkg.dev/my-python-project-451608/python-app-repo/python-app:latest'
      - '.'

  # 2. Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/my-python-project-451608/python-app-repo/python-app:$COMMIT_SHA'

  # 3. Create a Cloud Deploy release
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'deploy'
      - 'releases'
      - 'create'
      - 'release-$COMMIT_SHA'  # Unique release name per commit
      - '--delivery-pipeline=python-app-pipeline'  # Change to your actual pipeline name
      - '--region=us-central1'
      - '--images=python-app=us-central1-docker.pkg.dev/my-python-project-451608/python-app-repo/python-app:$COMMIT_SHA'

images:
  - 'us-central1-docker.pkg.dev/my-python-project-451608/python-app-repo/python-app:$COMMIT_SHA'

substitutions:
  _COMMIT_SHA: 'latest'  # Default value (Cloud Build overrides this)

options:
  logging: CLOUD_LOGGING_ONLY
